// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TestEFInserts;

namespace TestEFInserts.Migrations
{
    [DbContext(typeof(TestDbContext))]
    [Migration("20190402133611_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.2-servicing-10034")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TestEFInserts.Entities.Parent", b =>
                {
                    b.Property<int>("ParentId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("ParentId");

                    b.ToTable("Parents");
                });

            modelBuilder.Entity("TestEFInserts.Entities.Son", b =>
                {
                    b.Property<int>("SonId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.Property<int>("ParentId");

                    b.HasKey("SonId");

                    b.HasIndex("ParentId");

                    b.ToTable("Sons");
                });

            modelBuilder.Entity("TestEFInserts.Entities.SonWithAutoParent", b =>
                {
                    b.Property<int>("SonWithAutoParentId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.Property<int>("ParentId");

                    b.HasKey("SonWithAutoParentId");

                    b.HasIndex("ParentId");

                    b.ToTable("SonWithAutoParent");
                });

            modelBuilder.Entity("TestEFInserts.Entities.Toy", b =>
                {
                    b.Property<int>("ToyId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.Property<int>("SonId");

                    b.HasKey("ToyId");

                    b.HasIndex("SonId");

                    b.ToTable("Toys");
                });

            modelBuilder.Entity("TestEFInserts.Entities.Son", b =>
                {
                    b.HasOne("TestEFInserts.Entities.Parent", "Parent")
                        .WithMany()
                        .HasForeignKey("ParentId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("TestEFInserts.Entities.SonWithAutoParent", b =>
                {
                    b.HasOne("TestEFInserts.Entities.Parent", "Parent")
                        .WithMany()
                        .HasForeignKey("ParentId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("TestEFInserts.Entities.Toy", b =>
                {
                    b.HasOne("TestEFInserts.Entities.Son")
                        .WithMany("Toys")
                        .HasForeignKey("SonId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
